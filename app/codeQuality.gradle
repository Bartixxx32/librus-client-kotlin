apply plugin: "jacoco"


task copyKotlinClasses(type: Copy) {
    from "${buildDir}/tmp/kotlin-classes/debug"
    into "${buildDir}/intermediates/classes/debug"
}

jacoco {
    toolVersion = "0.7.1+"
}

def autoGenerated = [
        '**/R.class',
        '**/R$*.class',
        '**/Manifest*.*',
        'android/**/*.*',
        '**/BuildConfig.*',
        '**/*$ViewBinder*.*',
        '**/*$ViewInjector*.*',
        '**/*MembersInjector*.*',
        '**/*Provide*Factory.class',
        '**/Dagger*Component*.*',
        '**/vo/*Entity*.*',
        '**/vo/Models.class',
        '**/Lambda$*.class',
        '**/Lambda.class',
        '**/*Lambda.class',
        '**/*Lambda*.class']

task("jacocoTestReport", type: JacocoReport, dependsOn: ["copyKotlinClasses", "testDevDebugUnitTest", "connectedDevDebugAndroidTest"]) {
    group "Reporting"
    description "Generate Debug Jacoco coverage reports."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    sourceDirectories = files(android.sourceSets.main.java.srcDirs)
    classDirectories = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: autoGenerated)
    executionData = fileTree(dir: "$buildDir", includes: [
            "**/*.exec",'**/*.ec'
    ])
}